
from dataclasses import dataclass
import typing
import typing_extensions

from flytekit.core.annotation import FlyteAnnotation

from latch.types.metadata import NextflowParameter
from latch.types.file import LatchFile
from latch.types.directory import LatchDir, LatchOutputDir

# Import these into your `__init__.py` file:
#
# from .parameters import generated_parameters

generated_parameters = {
    'input': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title='Input/output options',
        description='Path to comma-separated file containing information about the samples you would like to analyse.',
    ),
    'platform': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='NGS platform used to sequence the samples.',
    ),
    'protocol': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specifies the type of protocol used for sequencing.',
    ),
    'outdir': NextflowParameter(
        type=typing_extensions.Annotated[LatchDir, FlyteAnnotation({'output': True})],
        default=None,
        section_title=None,
        description='The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.',
    ),
    'email': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Email address for completion summary.',
    ),
    'genome': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Reference genome options',
        description='Name of viral reference genome.',
    ),
    'fasta': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to FASTA genome file.',
    ),
    'gff': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Full path to GFF annotation file.',
    ),
    'bowtie2_index': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to directory or tar.gz archive for pre-built Bowtie2 index.',
    ),
    'primer_bed': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description="If the '--protocol amplicon' parameter is provided then iVar is used to trim primer sequences after read alignment and before variant calling.",
    ),
    'primer_fasta': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description="If the '--protocol amplicon' parameter is provided then Cutadapt is used to trim primer sequences from FastQ files before de novo assembly.",
    ),
    'primer_set': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='The primer set to be used for the data analysis.',
    ),
    'primer_set_version': NextflowParameter(
        type=typing.Optional[float],
        default=None,
        section_title=None,
        description="Version of the primer set e.g. '--primer_set artic --primer_set_version 3'.",
    ),
    'primer_left_suffix': NextflowParameter(
        type=typing.Optional[str],
        default='_LEFT',
        section_title=None,
        description="Suffix used in name field of '--primer_bed' to indicate left primer position.",
    ),
    'primer_right_suffix': NextflowParameter(
        type=typing.Optional[str],
        default='_RIGHT',
        section_title=None,
        description="Suffix used in name field of '--primer_bed' to indicate right primer position.",
    ),
    'save_reference': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If generated by the pipeline save reference genome related files to the results folder.',
    ),
    'fastq_dir': NextflowParameter(
        type=typing.Optional[LatchDir],
        default=None,
        section_title='Nanopore options',
        description='Path to a folder containing fastq files from the Nanopore run.',
    ),
    'fast5_dir': NextflowParameter(
        type=typing.Optional[LatchDir],
        default=None,
        section_title=None,
        description='Path to a folder containing fast5 files from the Nanopore run.',
    ),
    'sequencing_summary': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Sequencing summary file generated after Nanopore run completion.',
    ),
    'min_barcode_reads': NextflowParameter(
        type=typing.Optional[int],
        default=100,
        section_title=None,
        description='Minimum number of raw reads required per sample/barcode in order to be considered for the downstream processing steps.',
    ),
    'min_guppyplex_reads': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='Minimum number of reads required after the artic guppyplex process per sample/barcode in order to be considered for the downstream processing steps.',
    ),
    'artic_minion_caller': NextflowParameter(
        type=typing.Optional[str],
        default='nanopolish',
        section_title=None,
        description="Variant caller used when running artic minion (default: 'nanopolish').",
    ),
    'artic_minion_aligner': NextflowParameter(
        type=typing.Optional[str],
        default='minimap2',
        section_title=None,
        description="Aligner used when running artic minion (default: 'minimap2').",
    ),
    'artic_scheme': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Primer scheme recognised by the artic minion command.',
    ),
    'artic_minion_medaka_model': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description="Parameter passed to artic minion and required when using the '--artic_minion_caller medaka' workflow.",
    ),
    'skip_pycoqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip pycoQC.',
    ),
    'skip_nanoplot': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip NanoPlot.',
    ),
    'nextclade_dataset': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Nanopore/Illumina options',
        description="Full path to Nextclade dataset required for 'nextclade run' command.",
    ),
    'nextclade_dataset_name': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description="Name of Nextclade dataset to retrieve. A list of available datasets can be obtained using the 'nextclade dataset list' command.",
    ),
    'nextclade_dataset_reference': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description="Accession id to download dataset based on a particular reference sequence. A list of available datasets can be obtained using the 'nextclade dataset list' command.",
    ),
    'nextclade_dataset_tag': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description="Version tag of the dataset to download. A list of available datasets can be obtained using the 'nextclade dataset list' command.",
    ),
    'asciigenome_read_depth': NextflowParameter(
        type=typing.Optional[int],
        default=50,
        section_title=None,
        description='Maximum read depth used to generate ASCIIGenome screenshots for variant locii.',
    ),
    'asciigenome_window_size': NextflowParameter(
        type=typing.Optional[int],
        default=50,
        section_title=None,
        description='Maximum window size before and after variant locii used to generate ASCIIGenome screenshots.',
    ),
    'skip_mosdepth': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip genome-wide and amplicon coverage plot generation from mosdepth output.',
    ),
    'skip_pangolin': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip Pangolin lineage analysis for genome consensus sequence.',
    ),
    'skip_nextclade': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip Nextclade clade assignment, mutation calling, and sequence quality checks for genome consensus sequence.',
    ),
    'skip_asciigenome': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip variant screenshot generation with ASCIIGenome.',
    ),
    'skip_variants_quast': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip generation of QUAST aggregated report for consensus sequences.',
    ),
    'skip_variants_long_table': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip long table generation for reporting variants.',
    ),
    'skip_multiqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip MultiQC.',
    ),
    'kraken2_db': NextflowParameter(
        type=typing.Optional[str],
        default='s3://ngi-igenomes/test-data/viralrecon/kraken2_human.tar.gz',
        section_title='Illumina QC, read trimming and filtering options',
        description='Full path to Kraken2 database built from host genome.',
    ),
    'kraken2_db_name': NextflowParameter(
        type=typing.Optional[str],
        default='human',
        section_title=None,
        description="Name for host genome as recognised by Kraken2 when using the 'kraken2 build' command.",
    ),
    'kraken2_variants_host_filter': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Remove host reads identified by Kraken2 before running variant calling steps in the pipeline.',
    ),
    'kraken2_assembly_host_filter': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Remove host reads identified by Kraken2 before running aseembly steps in the pipeline.',
    ),
    'save_trimmed_fail': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save the trimmed FastQ files in the results directory.',
    ),
    'skip_fastqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip FastQC.',
    ),
    'skip_kraken2': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip Kraken2 process for removing host classified reads.',
    ),
    'skip_fastp': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip the initial read trimming step peformed by fastp.',
    ),
    'skip_cutadapt': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip the amplicon trimming step with Cutadapt when using --protocol amplicon.',
    ),
    'variant_caller': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Illumina variant calling options',
        description="Specify which variant calling algorithm you would like to use. Available options are 'ivar' (default for '--protocol amplicon') and 'bcftools' (default for '--protocol metagenomic').",
    ),
    'consensus_caller': NextflowParameter(
        type=typing.Optional[str],
        default='bcftools',
        section_title=None,
        description="Specify which consensus calling algorithm you would like to use. Available options are 'bcftools' and 'ivar' (default: 'bcftools').",
    ),
    'min_mapped_reads': NextflowParameter(
        type=typing.Optional[int],
        default=1000,
        section_title=None,
        description='Minimum number of mapped reads below which samples are removed from further processing. Some downstream steps in the pipeline will fail if this threshold is too low.',
    ),
    'ivar_trim_noprimer': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="This option unsets the '-e' parameter in 'ivar trim' to discard reads without primers.",
    ),
    'ivar_trim_offset': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description="This option sets the '-x' parameter in 'ivar trim' so that reads that occur at the specified offset positions relative to primer positions will also be trimmed.",
    ),
    'filter_duplicates': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Filtered duplicates reads detected by Picard MarkDuplicates from alignments.',
    ),
    'save_unaligned': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save unaligned reads in FastQ format from Bowtie 2 to the results directory.',
    ),
    'save_mpileup': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save mpileup files generated when calling variants with iVar variants or iVar consensus.',
    ),
    'skip_ivar_trim': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip iVar primer trimming step. Not recommended for --protocol amplicon.',
    ),
    'skip_markduplicates': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Skip picard MarkDuplicates step.',
    ),
    'skip_picard_metrics': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip Picard CollectMultipleMetrics steps.',
    ),
    'skip_snpeff': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip SnpEff and SnpSift annotation of variants.',
    ),
    'skip_consensus_plots': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip creation of consensus base density plots.',
    ),
    'skip_consensus': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip genome consensus creation step and any downstream QC.',
    ),
    'skip_variants': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Specify this parameter to skip all of the variant calling and mapping steps in the pipeline.',
    ),
    'assemblers': NextflowParameter(
        type=typing.Optional[str],
        default='spades',
        section_title='Illumina de novo assembly options',
        description="Specify which assembly algorithms you would like to use. Available options are 'spades', 'unicycler' and 'minia'.",
    ),
    'spades_mode': NextflowParameter(
        type=typing.Optional[str],
        default='rnaviral',
        section_title=None,
        description="Specify the SPAdes mode you would like to run (default: 'rnaviral').",
    ),
    'spades_hmm': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to profile HMMs specific for gene/organism to enhance SPAdes assembly.',
    ),
    'blast_db': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to directory or tar.gz archive for pre-built BLAST database.',
    ),
    'skip_bandage': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip Bandage image creation for assembly visualisation.',
    ),
    'skip_blast': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip blastn of assemblies relative to reference genome.',
    ),
    'skip_abacas': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip ABACAS process for assembly contiguation.',
    ),
    'skip_plasmidid': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Skip assembly report generation by PlasmidID.',
    ),
    'skip_assembly_quast': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip generation of QUAST aggregated report for assemblies.',
    ),
    'skip_assembly': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Specify this parameter to skip all of the de novo assembly steps in the pipeline.',
    ),
}

